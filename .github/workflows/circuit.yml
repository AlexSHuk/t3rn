name: Circuit CI

on:
  pull_request:
    # TODO: replace this with main branch at some point
    # CI now runs on all PRs targeted to `poc-1`
    branches:
      - poc-1
    paths:
      - circuit/**/*.rs
      - circuit/**/Cargo.toml
      - circuit/**/Cargo.lock
      - .github/workflows/circuit.yml

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  format:
    runs-on: ubuntu-20.04
    steps:
      - name: ☁️Checkout git repo
        uses: actions/checkout@master
        with:
          submodules: recursive

      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt
          override: true

      - name: 📜 Format code
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: |
            -p circuit
            -p circuit-rpc
            -p circuit-rpc-runtime-api
            -p circuit-runtime
            -p pallet-circuit-execution-delivery
            -p pallet-contracts-registry
            -p pallet-xdns
            -p t3rn-primitives
            --manifest-path circuit/Cargo.toml -- --check

  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: ☁️Checkout git repo
        uses: actions/checkout@master
        with:
          submodules: recursive

      - name: 🕒 Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: |
            ./llvm
          key: llvm

      - name: 🔨 Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "11.0"
          ubuntu-version: "20.04"
          directory: ${{ runner.temp }}/llvm
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown
          components: clippy
          override: true

      - name: 🕒 Cache Rust binaries and packages
        uses: actions/cache@v2
        id: cache-rust
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('circuit/Cargo.lock') }}

      - name: 📑 Lint code
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: |
            -p circuit
            -p circuit-runtime
            -p pallet-circuit-execution-delivery
            -p pallet-contracts-registry
            -p pallet-xdns
            -p t3rn-primitives
            --manifest-path circuit/Cargo.toml

  check:
    runs-on: ubuntu-20.04
    needs: [format, lint]
    steps:
      - name: ☁ Checkout git repo
        uses: actions/checkout@master
        with:
          submodules: recursive

      - name: 🕒 Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: |
            ./llvm
          key: llvm

      - name: 🔨 Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "11.0"
          ubuntu-version: "20.04"
          directory: ${{ runner.temp }}/llvm
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown
          override: true

      - name: 🕒 Cache Rust binaries and packages
        uses: actions/cache@v2
        id: cache-rust
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('circuit/Cargo.lock') }}

      - name: 🏭 Check circuit
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: check
          args: --locked --manifest-path circuit/Cargo.toml

  test:
    runs-on: ubuntu-20.04
    needs: [format, lint]
    steps:
      - name: ☁️Checkout git repo
        uses: actions/checkout@master
        with:
          submodules: recursive

      - name: 🕒 Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: |
            ./llvm
          key: llvm

      - name: 🔨 Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "11.0"
          ubuntu-version: "20.04"
          directory: ${{ runner.temp }}/llvm
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: ⚙️Get nightly rust toolchain with wasm target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown
          override: true

      - name: 🕒 Cache Rust binaries and packages
        uses: actions/cache@v2
        id: cache-rust
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('circuit/Cargo.lock') }}

      - name: 📼 Run unit tests
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: test
          args: --workspace --exclude circuit-rpc --exclude circuit-rpc-runtime-api --locked
